{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/flashcards/[topicId]",
      "regex": "^/flashcards/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtopicId": "nxtPtopicId"
      },
      "namedRegex": "^/flashcards/(?<nxtPtopicId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/quiz/[topicId]",
      "regex": "^/quiz/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtopicId": "nxtPtopicId"
      },
      "namedRegex": "^/quiz/(?<nxtPtopicId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/test/[testId]",
      "regex": "^/test/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtestId": "nxtPtestId"
      },
      "namedRegex": "^/test/(?<nxtPtestId>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/accuracy",
      "regex": "^/accuracy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/accuracy(?:/)?$"
    },
    {
      "page": "/auth",
      "regex": "^/auth(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth(?:/)?$"
    },
    {
      "page": "/badges",
      "regex": "^/badges(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/badges(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/flashcards",
      "regex": "^/flashcards(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/flashcards(?:/)?$"
    },
    {
      "page": "/leaderboard",
      "regex": "^/leaderboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/leaderboard(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/results",
      "regex": "^/results(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/results(?:/)?$"
    },
    {
      "page": "/test-results",
      "regex": "^/test\\-results(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-results(?:/)?$"
    },
    {
      "page": "/tests",
      "regex": "^/tests(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/tests(?:/)?$"
    },
    {
      "page": "/topics",
      "regex": "^/topics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/topics(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}